/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista.MenuAdminProyectos;

import Controlador.ConexionBD;
import Controlador.ProyectoService;
import Modelo.Proyecto;
import Modelo.ProyectoDAO;
import Modelo.Torre;
import Modelo.TorreDAO;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author USER
 */
public class ActualizarTorre extends javax.swing.JFrame {
    private int torreNumero;
    private int idProyecto;
    private ProyectoService proyectoService;
    private HashMap<String, Integer> proyectoMap = new HashMap<>();
    /**
     * Creates new form ActualizarTorre
     */
    public ActualizarTorre(int torreNumero, int idProyecto) {
        initComponents();
        this.torreNumero = torreNumero;
        this.idProyecto = idProyecto;
        cargarDatosTorre();
        
    }
    
    
           private void cargarDatosTorre() {
        try (Connection conexion = ConexionBD.getInstancia().getConnection()) {
            TorreDAO torreDAO = new TorreDAO(conexion);
            Torre torre = torreDAO.obtenerTorrePorNumero(this.torreNumero);

            if (torre != null) {
                // Establecer el número de la torre en jTextField
                jTextField2.setText(String.valueOf(torre.getNumerotorre()));

                // Llenar el ComboBox de proyectos y seleccionar el proyecto correspondiente
                llenarComboBoxProyectos();

                // Seleccionar el proyecto en el ComboBox según el idProyecto de la torre
                for (String nombreProyecto : proyectoMap.keySet()) {
                    if (proyectoMap.get(nombreProyecto).equals(torre.getIdproyecto())) {
                        jComboBox1.setSelectedItem(nombreProyecto);
                        break;
                    }
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al cargar los datos de la torre.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void llenarComboBoxProyectos() {
        this.proyectoService = new ProyectoService(new ProyectoDAO(ConexionBD.getInstancia().getConnection())); // Inicializa el servicio
        List<Proyecto> proyectos = proyectoService.obtenerProyectosBasicos(); // Llama al método
        jComboBox1.removeAllItems(); // Limpia elementos anteriores
        proyectoMap.clear(); // Limpia el mapa de proyectos

        if (proyectos != null && !proyectos.isEmpty()) { // Comprueba si la lista no está vacía
            for (Proyecto proyecto : proyectos) {
                jComboBox1.addItem(proyecto.getNombreProyecto());
                proyectoMap.put(proyecto.getNombreProyecto(), proyecto.getIdproyecto());
            }
        } else {
            JOptionPane.showMessageDialog(this, "No se encontraron proyectos.", "Información", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setText("Nombre Torre");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 337, 51));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel3.setText("Actualizar Torre");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 20, -1, 39));

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 240, 50));

        jButton1.setBackground(new java.awt.Color(1, 60, 136));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/Imagenes/actualizar.png"))); // NOI18N
        jButton1.setText("Actualizar");
        jButton1.setBorder(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(492, 379, 200, 60));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setText("Proyecto");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 110, -1, -1));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.setBorder(null);
        jComboBox1.setEnabled(false);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 160, 100, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
 try {
        String nombreTorre = jTextField2.getText();
        String proyectoSeleccionado = (String) jComboBox1.getSelectedItem();
        Integer idProyectoSeleccionado = proyectoMap.get(proyectoSeleccionado);

        // Validar que el campo de texto no esté vacío
        if (nombreTorre.isEmpty()) {
            JOptionPane.showMessageDialog(this, "El nombre de la torre no puede estar vacío.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Obtener la torre actual de la base de datos
        TorreDAO torreDAO = new TorreDAO(ConexionBD.getInstancia().getConnection());
        Torre torre = torreDAO.obtenerTorrePorNumero(torreNumero); // Obtener la torre actual usando torreNumero

        // Verificar si la torre existe en la base de datos
        if (torre == null) {
            JOptionPane.showMessageDialog(this, "No se encontró ninguna torre para actualizar.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Establecer los valores nuevos en la torre
        torre.setNumerotorre(Integer.parseInt(nombreTorre));
        torre.setIdproyecto(idProyectoSeleccionado);

        // Llamar al método para actualizar la torre en la base de datos
        if (torreDAO.actualizarTorre(torre)) {
            JOptionPane.showMessageDialog(this, "Torre actualizada exitosamente.");
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo actualizar la torre.", "Error", JOptionPane.ERROR_MESSAGE);
        }

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al actualizar la torre: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);      
    }    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ActualizarTorre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ActualizarTorre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ActualizarTorre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ActualizarTorre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ActualizarTorre(0,0).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
